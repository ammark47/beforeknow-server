const db = require('./index')

const createUserTable = async () => {
    await db.none('CREATE TABLE IF NOT EXISTS users( \
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1000 MINVALUE 1000 MAXVALUE 2147483647 CACHE 1 ), \
        name character varying NOT NULL, \
        email character varying, \
        chat_token character varying(160),    \
        chat_currency integer DEFAULT 6, \
        chat_username character varying, \
        unique_id character varying NOT NULL, \
        CONSTRAINT id_pk PRIMARY KEY (id), \
        CONSTRAINT user_id UNIQUE (id) \
            DEFERRABLE) '
    )
}

const createProductTable = async () => {
    await db.none('CREATE TABLE IF NOT EXISTS product( \
        id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ), \
        store_name character varying COLLATE pg_catalog."default", \
        product_name character varying COLLATE pg_catalog."default", \
        store_item_id integer, \
        small_image character varying COLLATE pg_catalog."default", \
        CONSTRAINT p_id PRIMARY KEY (id) )'
    )
}

const createReviewTable = async () => {
    await db.none('CREATE TABLE IF NOT EXISTS review( \
        id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ), \
        user_id integer NOT NULL, \
        product_id integer, \
        review_text character varying COLLATE pg_catalog."default", \
        rating smallint, \
        CONSTRAINT "Review_pkey" PRIMARY KEY (id), \
        CONSTRAINT review_p_id FOREIGN KEY (product_id) \
            REFERENCES public.product (id) MATCH SIMPLE \
            ON UPDATE NO ACTION \
            ON DELETE NO ACTION \
            NOT VALID, \
        CONSTRAINT "review_user-id" FOREIGN KEY (user_id) \
            REFERENCES public.users (id) MATCH SIMPLE \
            ON UPDATE NO ACTION \
            ON DELETE NO ACTION \
            NOT VALID)' 
    )
}

const createChatTable = async () => {
    await db.none('CREATE TABLE IF NOT EXISTS chat( \
        id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ), \
        customer_id integer, \
        reviewer_id integer, \
        status character varying COLLATE pg_catalog."default", \
        review_id integer, \
        CONSTRAINT chat_pkey PRIMARY KEY (id), \
        CONSTRAINT customer_fk FOREIGN KEY (customer_id) \
            REFERENCES public.users (id) MATCH SIMPLE \
            ON UPDATE NO ACTION \
            ON DELETE NO ACTION \
            NOT VALID, \
        CONSTRAINT review_fk FOREIGN KEY (review_id) \
            REFERENCES public.review (id) MATCH SIMPLE \
            ON UPDATE NO ACTION \
            ON DELETE NO ACTION \
            NOT VALID, \
        CONSTRAINT reviewer_fk FOREIGN KEY (reviewer_id) \
            REFERENCES public.users (id) MATCH SIMPLE \
            ON UPDATE NO ACTION \
            ON DELETE NO ACTION \
            NOT VALID)' 
    )
}

createUserTable()
createProductTable()
createReviewTable()
createChatTable()